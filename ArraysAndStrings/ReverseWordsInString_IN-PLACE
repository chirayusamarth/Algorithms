
public class ReverseWordsInString_InPlace {

	/**
	 * @param args
	 * 
	 * 
	 * 
	 * Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.
		The input string does not contain leading or trailing spaces and the words are always separated by a single space.

		For example,
		Given s = "the sky is blue",
		return "blue is sky the".

		Could you do it in-place without allocating extra space?
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String s= "the sky is blue";
		int n= s.length();
		
		char c[]= s.toCharArray();
		//Reversing individual words. Eg. the -> eht
		int i=0;
		for(int j=0;j<n;j++){
			if(c[j]==' '){
				reverse(c, i, j-1);
				i= j+1;
			}
		}	
		//Reversing last word. blue -> eulb
		reverse(c, i, n-1);
		
		//Reversing the entire sentence:  eht yks si eulb -> blue is sky the
		reverse(c, 0, n-1);
		
		
	}

	private static void reverse(char[] c, int i, int j) {
		// TODO Auto-generated method stub
		while(i<j){
			char temp= c[i];
			c[i]= c[j];
			c[j]= temp;
			i++;
			j--;
		}
	}

}
